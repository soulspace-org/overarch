;;;;
;;;; Example Code Model
;;;;

#{;;
  ;; Elements
  ;;
  {:el :interface
   :id :code/ishape
   :name "IShape"
   :ct [{:el :method
         :id :code/ishape-area
         :type "double"
         :name "area"}
        {:el :method
         :id :code/ishape-circumference
         :type "double"
         :name "circumference"}]}
  {:el :class
   :id :code/shape
   :name "Shape"
   :abstract true
   :test/wikipedia-url "https://en.wikipedia.org/wiki/Shape"
   :ct [{:el :method
         :id :code/shape-area
         :abstract true
         :type "double"
         :name "area"}
        {:el :method
         :id :code/shape-circumference
         :abstract true
         :type "double"
         :name "circumference"}]}
  {:el :class
   :id :code/circle
   :name "Circle"
   :ct [{:el :field
         :id :code/circle-radius
         :type "double"
         :name "radius"}
        {:el :method
         :id :code/circle-area
         :type "double"
         :name "area"}
        {:el :method
         :id :code/circle-circumference
         :type "double"
         :name "circumference"}
        {:el :method
         :id :code/circle-shape
         :scope :classifier
         :type "IShape"
         :name "shape"}]}
  {:el :class
   :id :code/square
   :name "Square"
   :ct [{:el :field
         :id :code/square-width
         :type "double"
         :name "width"}
        {:el :method
         :id :code/square-area
         :type "double"
         :name "area"}
        {:el :method
         :id :code/square-circumference
         :type "double"
         :name "circumference"}
        {:el :method
         :id :code/square-shape
         :scope :classifier
         :type "IShape"
         :name "shape"}]}

  ;;
  ;; Relations
  ;;
  {:el :implementation
   :id :code/shape-extends-ishape
   :from :code/shape
   :to :code/ishape}
  {:el :inheritance
   :id :code/circle-extends-shape
   :from :code/circle
   :to :code/shape}
  {:el :inheritance
   :id :code/square-extends-shape
   :from :code/square
   :to :code/shape}}