;;;;
;;;; Example architecture views for the Internet Banking System
;;;;
#{;;;
  ;;; System Context
  ;;;

  ;; System context view with criteria based selection of elements
  {:el :context-view
   :id :banking/context-view
   :spec {:selection [{:from {:id :banking/internet-banking-system}}
                      {:to {:id :banking/internet-banking-system}}]
          :include :related
          :plantuml {:sprite-libs [:azure :devicons :font-awesome-5]}}
   :title "System Context View of the Internet Banking System"
   :desc "shows the Internet Banking System and its context"
   :ct [{:ref :banking/email-system-sends-mail-to-personal-customer :direction :up}]}

  ;; System context view with referenced elements (only the referenced elements will be rendered)
  {:el :context-view
   :id :banking/system-context-view
   :title "System Context View of the Internet Banking System"
   :desc "shows the Internet Banking System and its context"
   :ct [; model elements
        {:ref :banking/personal-customer}
        {:ref :banking/email-system}
        {:ref :banking/mainframe-banking-system}
        {:ref :banking/internet-banking-system}

       ; relations
        {:ref :banking/personal-customer-uses-internet-banking-system :direction :down}
        {:ref :banking/internet-banking-system-uses-email-system :direction :right}
        {:ref :banking/internet-banking-system-using-mainframe-banking-system}
        {:ref :banking/email-system-sends-mail-to-personal-customer :direction :up}]}

  ;;;
  ;;; Container
  ;;;
  ;; Container view with criteria based selection of elements
  {:el :container-view
   :id :banking/container-view
   :spec {:selection {:namespace "banking"
                      :model-node? true
                      :!ids #{:banking/atm :banking/backoffice-stuff
                              :banking/customer-service-stuff}}
          :include :relations
          :plantuml {:sprite-libs [:azure :devicons :font-awesome-5]}}
   :title "Container View of the Internet Banking System"
   :desc "shows the containers of the Internet Banking System and their relations"}

  ;;;
  ;;; Components
  ;;;
  {:el :component-view
   :id :banking/component-view
   :spec {:selection {:namespace-prefix "banking"
                      :!ids #{:banking/atm :banking/backoffice-stuff
                              :banking/customer-service-stuff}}
          :include :related}
   :title "Component View of the API Application"
   :desc "shows the components of the Internet Banking System and their relations"}

  ;;;
  ;;; System Landscape
  ;;;
  {:el :system-landscape-view
   :id :banking/system-landscape-view
   :spec {:selection {:namespace-prefix "banking"}
          :include :related}
   :title "System Landscape View of Big Bank plc"}

  ;;;
  ;;; Deployment
  ;;;
  {:el :deployment-view
   :id :banking.deployment/deployment-view
   ;:spec {:include :related}
   :title "Deployment View of Big Bank plc"
   :ct [; model elements
        {:ref :banking.deployment/personal-customers-mobile-device}
        {:ref :banking.deployment/personal-customers-computer}
        {:ref :banking.deployment/big-bank-plc-datacenter}

        ; relations
        {:ref :banking/single-page-app-calls-api-application}
        {:ref :banking/mobile-app-calls-api-application}
        {:ref :banking/web-app-deliveres-single-page-app}
        {:ref :banking/api-application-uses-mainframe-banking-system}
        {:ref :banking/api-application-uses-database}
        ; add relations for the read database
        {:el :rel
         :id :banking/api-application-uses-database-read
         :from :banking/api-application
         :to :banking/database-read
         :name "Reads from"
         :tech "Datalog"}
        {:el :rel
         :id :banking/database-sync
         :from :banking/database
         :to :banking/database-read
         :name "synchronises"
         :direction :right}]}

  {:el :deployment-structure-view
   :id :banking/deployment-structure-view
   :spec {:selection {:id :banking/big-bank-plc-datacenter}}
   :name "Big Bank Deployment Structure View"
   :title "Deployment Structure View of Big Bank Datacenter"
   :desc "Shows the hierarchical structure of the infrastructure and deployment elements"}

  {:el :use-case-view
   :id :banking/use-case-view
   :spec {:layout :left-right}
   :title "Use Cases of the Internet Banking System"
   :ct [; actors
        {:ref :banking/personal-customer :name "Customer"}
        ; use cases
        {:ref :banking.usecases/view-account}
        {:ref :banking.usecases/make-transaction}
        ; relations
        {:ref :banking/personal-customer-uses-view-account}
        {:ref :banking/personal-customer-uses-make-transaction}]}

  {:el :concept-view
   :id :banking/concept-view
   :spec {:selection {:namespace-prefix "banking.concepts"}
          :include :related
          :markdown {:references true}}
   :title "Concept Map for the Banking System"
   :ct []}

  {:el :glossary-view
   :id :banking/glossary-view
   :spec {:selection {:namespace "banking"}}
   :title "Glossary of the Banking System"
   :desc "defines the elements of the banking model"}

  {:el :system-structure-view
   :id :banking/system-structure-view
   :spec {:selection {:namespace "banking" :external? false}}
   :title "System Structure"
   :desc "Shows the hierarchical structure of the sytems in scope."}

  {:el :organization-structure-view
   :id :banking/organization-structure-view
   :spec {:selection {:namespace-prefix "banking" :external? false}}
   :title "Organization Structure"
   :desc "Shows the hierarchical structure of the organization in scope."}

  {:el :model-view
   :id :banking/model-view
   :spec {:selection {:namespace "banking"}
          :linetype :orthogonal}
   :name "Banking Model View"
   :title "Banking Model View"
   :desc "Shows all elements in the banking model"}

  ;
  }
