;;;;
;;;; Model for the Internet Banking System
;;;;
#{;;;
  ;;; Concept Model
  ;;;
  ;; 
  ;; Concept Model Nodes
  ;;
  {:el :concept
   :id :banking/account-concept
   :name "Account"
   :desc "Records the transactions of a customer."}
  {:el :concept
   :id :banking/bank-concept
   :name "Bank"
   :desc "A company providing monetary services for customers."}
  {:el :concept
   :id :banking/internet-banking-concept
   :name "Internet Banking"
   :desc "Describes banking services provided over the internet. Customers can interact with the bank with their computers or mobile devices."}
  {:el :concept
   :id :banking/transaction-concept
   :name "Transaction"
   :desc "An action done on the account, e.g. a withdrawal or a money transfer."}

  ;; 
  ;; Concept Model Relations
  ;; 
  {:el :has
   :id :banking/bank-provides-internet-banking
   :from :banking/bank-concept
   :to :banking/internet-banking-concept
   :name "provides"}
  {:el :has
   :id :banking/bank-provides-accounts
   :from :banking/bank-concept
   :to :banking/account-concept
   :name "provides"}
  {:el :rel
   :id :banking/bank-performs-transaction
   :from :banking/bank-concept
   :to :banking/transaction-concept
   :name "performs"}
  {:el :rel
   :id :banking/account-reflects-transaction
   :from :banking/account-concept
   :to :banking/transaction-concept
   :name "reflects"}
  {:el :rel
   :id :banking/internet-banking-system-implements-internet-banking-concept
   :from :banking/internet-banking-system
   :to :banking/internet-banking-concept
   :name "implements"}
  {:el :has
   :id :banking/personal-customer-has-account
   :from :banking/personal-customer
   :to :banking/account-concept
   :name "has"}
  {:el :rel
   :id :banking/personal-customer-triggers-transaction
   :from :banking/personal-customer
   :to :banking/transaction-concept
   :name "triggers"}

  ;;;
  ;;; Organization Model
  ;;;
  {:el :organization
   :id :banking/big-bank
   :name "Big Bank plc"
   :desc "Big Bank plc Organization"
   :ct [{:el :org-unit
         :id :banking/internet-banking-department
         :name "Internet Banking"
         :desc "Internet Banking Department"
         :ct [{:el :org-unit
               :id :banking/mobile-app-team
               :name "Mobile App"
               :desc "Mobile App Team"}
              {:el :org-unit
               :id :banking/web-app-team
               :name "Web App"
               :desc "Web App Team"}
              {:el :org-unit
               :id :banking/api-app-team
               :name "API App"
               :desc "API App Team"}]}
        {:el :org-unit
         :id :banking/core-banking
         :name "Core Banking"
         :desc "Core Banking Department"}
        {:el :org-unit
         :id :banking/human-resources
         :name "Human Resources"
         :desc "Human Resources Department"
         :ct [{:el :org-unit
               :id :banking/recruiting
               :name "Recruiting"
               :desc "Recruiting Unit"}]}
        {:el :org-unit
         :id :banking/marketing
         :name "Marketing"
         :desc "Marketing Department"}]}

  ;;;
  ;;; Use Case Model
  ;;;
  ;;
  ;; Actors
  ;;
  {:el :person
   :id :banking/personal-customer
   :name "Personal Banking Customer"
   :desc "A customer of the bank, with personal banking accounts."}
  ;;
  ;; Use Cases
  ;;
  {:el :use-case
   :id :banking/view-account
   :name "view account"
   :desc "view the account details"
   :level :user-goal}
  {:el :use-case
   :id :banking/make-transaction
   :name "transfer money"
   :desc "make a monetary transaction"
   :level :user-goal}

  ;;
  ;; Use case Relations
  ;;
  {:el :uses
   :id :banking/personal-customer-uses-view-account
   :from :banking/personal-customer
   :to :banking/view-account
   :name "uses"}
  {:el :uses
   :id :banking/personal-customer-uses-make-transaction
   :from :banking/personal-customer
   :to :banking/make-transaction
   :name "uses"}

  ;;;
  ;;; Architecture Model
  ;;;
  ;;
  ;; Architecture Model Nodes
  ;;
  {:el :enterprise-boundary
   :id :banking/big-bank-plc
   :name "Big Bank plc"
   :ct #{; systems under design
         {:el :system
          :id :banking/internet-banking-system
          :name "Internet Banking System"
          :desc "Allows customers to view information about their bank accounts and make payments."
          :ct #{{:el :container
                 :id :banking/web-app
                 :name "Web Application"
                 :desc "Deliveres the static content and the internet banking single page application."
                 :tech "Clojure and Luminus"
                 :sprite "Clojure"}
                {:el :container
                 :id :banking/single-page-app
                 :name "Single-Page Application"
                 :desc "Provides all of the internet banking functionality to customers via their web browser."
                 :tech "ClojureScript and Re-Frame"
                 :sprite "ClojureScript"}
                {:el :container
                 :id :banking/mobile-app
                 :name "Mobile App"
                 :desc "Provides a limited subset of the internet banking functionality to customers via their mobile device."
                 :tech "ClojureScript and Reagent"
                 :sprite "ClojureScript"}
                {:el :container
                 :id :banking/api-application
                 :name "API Application"
                 :desc "Provides internet banking functionality via a JSON/HTTPS API."
                 :tech "Clojure and Liberator"
                 :sprite "Clojure"
                 :ct #{{:el :component
                        :id :banking/sign-in-controller
                        :name "Sign In Controller"
                        :desc "Allows users to sign in to the banking system."
                        :tech "Clojure namespace"}
                       {:el :component
                        :id :banking/security-component
                        :name "Security Component"
                        :desc "Provides functionality related to signing in, changing passwords, etc."
                        :tech "Clojure namespace"}
                       {:el :component
                        :id :banking/reset-password-controller
                        :name "Reset Password Controller"
                        :desc "Allows users to reset their passwords with a single use URL."
                        :tech "Clojure namespace"}
                       {:el :component
                        :id :banking/email-component
                        :name "E-mail Component"
                        :desc "Sends e-mail to users."
                        :tech "Clojure namespace"}
                       {:el :component
                        :id :banking/accounts-summary-controller
                        :name "Accounts Summary Controller"
                        :desc "Provides customers with a summary of their bank accounts."
                        :tech "Clojure Namespace"}
                       {:el :component
                        :id :banking/mainframe-banking-system-facade
                        :name "Mainframe Banking System Facade"
                        :desc "A facade onto the mainframe banking system."
                        :tech "Clojure Namespace, http-client"}}}
                {:el :container
                 :subtype :database
                 :id :banking/database
                 :name "Database"
                 :desc "Stores the user registration information, hashed authentication credentials, access logs, etc."
                 :tech "Datomic"}
                {:el :container
                 :subtype :database
                 :id :banking/database-read
                 :name "Database for Reads"
                 :desc "Stores the user registration information, hashed authentication credentials, access logs, etc."
                 :tech "Datomic"}}}
         ; external systems
         {:el :system
          :id :banking/mainframe-banking-system
          :external true
          :name "Mainframe Banking System"
          :desc "Stores all the core banking information about customers, accounts, transactions, etc."}
         {:el :system
          :id :banking/email-system
          :external true
          :name "E-mail System"
          :desc "The internal Microsoft Exchange email system."}
         {:el :system
          :id :banking/atm
          :external true
          :name "ATM"
          :desc "Allows customers to withdraw cash."}
         {:el :person
          :id :banking/customer-service-stuff
          :external true
          :name "Customer Service Stuff"
          :desc "Customer service stuff within the bank."}
         {:el :person
          :id :banking/backoffice-stuff
          :external true
          :name "Backoffice Stuff"
          :desc "Administration and support stuff within the bank."}}}
  ;;
  ;; Context Level Relations 
  ;;
  {:el :request
   :id :banking/personal-customer-uses-internet-banking-system
   :from :banking/personal-customer
   :to :banking/internet-banking-system
   :name "views account balances and makes payments using"}
  {:el :request
   :id :banking/internet-banking-system-uses-email-system
   :from :banking/internet-banking-system
   :to :banking/email-system
   :name "sends e-mail using"}
  {:el :request
   :id :banking/internet-banking-system-using-mainframe-banking-system
   :from :banking/internet-banking-system
   :to :banking/mainframe-banking-system
   :name "gets account information from, and makes payments using"}
  {:el :send
   :id :banking/email-system-sends-mail-to-personal-customer
   :from :banking/email-system
   :to :banking/personal-customer
   :name "sends e-mail to"}

  ;;
  ;; Container Level Relations 
  ;;
  {:el :request
   :id :banking/personal-customer-uses-web-app
   :from :banking/personal-customer
   :to :banking/web-app
   :name "visits bigbank.com/ib using"
   :tech "HTTPS"}
  {:el :request
   :id :banking/personal-customer-uses-single-page-app
   :from :banking/personal-customer
   :to :banking/single-page-app
   :name "views account balances and makes payments using"}
  {:el :request
   :id :banking/personal-customer-uses-mobile-app
   :from :banking/personal-customer
   :to :banking/mobile-app
   :name "views account balances and makes payments using"}
  {:el :response
   :id :banking/web-app-deliveres-single-page-app
   :from :banking/web-app
   :to :banking/single-page-app
   :name "delivers to the customer's web browser"}
  {:el :request
   :id :banking/single-page-app-calls-api-application
   :from :banking/single-page-app
   :to :banking/api-application
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/mobile-app-calls-api-application
   :from :banking/mobile-app
   :to :banking/api-application
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/api-application-uses-database
   :from :banking/api-application
   :to :banking/database
   :name "reads from and writes to"
   :tech "Datalog"}
  {:el :request
   :id :banking/api-application-uses-email-system
   :from :banking/api-application
   :to :banking/email-system
   :name "sends e-mail using"}
  {:el :request
   :id :banking/api-application-uses-mainframe-banking-system
   :from :banking/api-application
   :to :banking/mainframe-banking-system
   :name "makes API calls to"
   :tech "XML/HTTPS"}

  ;;
  ;; Component Level Relations
  ;;
  {:el :request
   :id :banking/single-page-app-calls-sign-in-controller
   :from :banking/single-page-app
   :to :banking/sign-in-controller
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/single-page-app-calls-reset-password-controller
   :from :banking/single-page-app
   :to :banking/reset-password-controller
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/single-page-app-calls-accounts-summary-controller
   :from :banking/single-page-app
   :to :banking/accounts-summary-controller
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/mobile-app-calls-sign-in-controller
   :from :banking/mobile-app
   :to :banking/sign-in-controller
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/mobile-app-calls-reset-password-controller
   :from :banking/mobile-app
   :to :banking/reset-password-controller
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/mobile-app-calls-accounts-summary-controller
   :from :banking/mobile-app
   :to :banking/accounts-summary-controller
   :name "makes API calls to"
   :tech "Transit/HTTPS"}
  {:el :request
   :id :banking/sign-in-controller-uses-security-component
   :from :banking/sign-in-controller
   :to :banking/security-component
   :name "uses"}
  {:el :request
   :id :banking/reset-password-controller-uses-email-component
   :from :banking/reset-password-controller
   :to :banking/email-component
   :name "uses"}
  {:el :request
   :id :banking/accounts-summary-controller-uses-mainframe-banking-system-facade
   :from :banking/accounts-summary-controller
   :to :banking/mainframe-banking-system-facade
   :name "uses"}
  {:el :request
   :id :banking/security-component-uses-database
   :from :banking/security-component
   :to :banking/database
   :name "reads from and writes to"
   :tech "Datalog"}
  {:el :request
   :id :banking/email-component-uses-email-system
   :from :banking/email-component
   :to :banking/email-system
   :name "sends e-mail using"}
  {:el :request
   :id :banking/mainframe-banking-system-facade-calls-mainframe-banking-system
   :from :banking/mainframe-banking-system-facade
   :to :banking/mainframe-banking-system
   :name "makes API calls to"
   :tech "XML/HTTPS"}

  ;;
  ;; System landscape relations
  ;;
  {:el :rel
   :id :banking/personal-customer-uses-atm
   :from :banking/personal-customer
   :to :banking/atm
   :name "withdraws cash using"}
  {:el :rel
   :id :banking/personal-customer-asks-customer-service-stuff
   :from :banking/personal-customer
   :to :banking/customer-service-stuff
   :name "asks questions to"}
  {:el :rel
   :id :banking/atm-uses-mainframe-banking-system
   :from :banking/atm
   :to :banking/mainframe-banking-system
   :name "uses"}
  {:el :rel
   :id :banking/customer-service-stuff-uses-mainframe-banking-system
   :from :banking/customer-service-stuff
   :to :banking/mainframe-banking-system
   :name "uses"}
  {:el :rel
   :id :banking/backoffice-stuff-uses-mainframe-banking-system
   :from :banking/backoffice-stuff
   :to :banking/mainframe-banking-system
   :name "uses"}

  ;;;
  ;;; Deployment Model
  ;;;
  ;;
  ;; Deployment Model Nodes
  ;;
  {:el :node
   :id :banking/personal-customers-computer
   :name "Customer's Computer"
   :tech "Windows, macOS, Linux"
   :ct #{{:el :node
          :id :banking/personal-customers-browser
          :name "Web Browser"
          :tech "Chrome, Firefox, Safari or Edge"}}}
  {:el :node
   :id :banking/personal-customers-mobile-device
   :name "Customer's Mobile Device"
   :tech "Android or iOS"}
  {:el :node
   :id :banking/big-bank-plc-datacenter
   :name "Big Bank plc"
   :tech "Datacenter"
   :ct #{{:el :node
          :id :banking/big-bank-kubernetes-cluster
          :name "Kubernetes Cluster"
          :tech "VM, Ubuntu 22.04 LTS, K8s"
          :sprite "Kubernetes"
          :ct #{{:el :node
                 :id :banking/big-bank-web-server-node-pool
                 :name "Web Server Node Pool"
                 :tech "VM, Ubuntu 22.04 LTS"
                 :ct #{{:el :node
                        :id :banking/big-bank-web-server-pod
                        :name "Web Server Pod"
                        :desc "autoscaled, 2-8 instances"}}}
                {:el :node
                 :id :banking/big-bank-api-server-node-pool
                 :name "API Server Node Pool"
                 :tech "VM, Ubuntu 22.04 LTS"
                 :ct #{{:el :node
                        :id :banking/big-bank-api-server-pod
                        :name "API Server Pod"
                        :desc "autoscaled, 2-16 instances"}}}}}
         {:el :node
          :id :banking/big-bank-prod001
          :name "BigBank-prod001"}
         {:el :node
          :id :banking/big-bank-db01
          :name "Primary DB Server"
          :tech "Datomic"
          :desc "for writes"}
         {:el :node
          :id :banking/big-bank-db02
          :name "Secondary DB Server"
          :tech "Datomic"
          :desc "for reads"}}}

  ;;
  ;; Deployment Model Relations
  ;;
  {:el :deployed-to
   :id :banking/single-page-app-deployed-to-personal-customers-browser
   :from :banking/single-page-app
   :to :banking/personal-customers-browser}

  {:el :deployed-to
   :id :banking/mobile-app-deployed-to-personal-customers-mobile-device
   :from :banking/mobile-app
   :to :banking/personal-customers-mobile-device}

  {:el :deployed-to
   :id :banking/web-app-deployed-to-big-bank-web-server-pod
   :from :banking/web-app
   :to :banking/big-bank-web-server-pod}

  {:el :deployed-to
   :id :banking/api-application-deployed-to-big-bank-api-server-pod
   :from :banking/api-application
   :to :banking/big-bank-api-server-pod}

  {:el :deployed-to
   :id :banking/mainframe-banking-system-deployed-to-big-bank-prod001
   :from :banking/mainframe-banking-system
   :to :banking/big-bank-prod001}

  {:el :deployed-to
   :id :banking/database-deployed-to-big-bank-db01
   :from :banking/database
   :to :banking/big-bank-db01}

  {:el :deployed-to
   :id :banking/database-deployed-to-big-bank-db02
   :from :banking/database-read
   :to :banking/big-bank-db02}

  ;
  }