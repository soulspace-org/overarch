<%
;;;;
;;;; Template for a Graphviz Dot Graph of the Concept View
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(defn node-label
  "Returns the label of the `node` for the `view`."
  [node view]
  (if (= :model-view (:el view))
    (str "<<FONT POINT-SIZE=\"10\">«" (name (:el node)) "»<BR/><I>" (:name node) "</I></FONT>>"))
    (str "<<B>" (:name node) "</B><BR/><FONT POINT-SIZE=\"10\"><I>" (:desc node) " </I></FONT>>"))

(defn relation-label
  "Returns the label of the `node` for the `view`."
  [node view]
  (if (= :model-view (:el view))
    (str "<<FONT POINT-SIZE="10">«" (name (:el node)) "»<BR/><I>" (:name node) "</I></FONT>>"))
    (str "<<B>" (:name node) "</B><BR/><FONT POINT-SIZE="10"><I>" (:desc node) " </I></FONT>>"))

(let [elements (v/view-elements model e)
      nodes (filterv m/model-node? elements)
      relations (filterv m/model-relation? elements)]

%>digraph "<%= (v/title e) %>" {
labelloc= "t"
label="<%= (v/title e) %>"
<%
  (when (= :left-right (get-in view [:spec :layout]))
%>rankdir="LR"
<%
  )
%>
// nodes
<%
  (doseq [node concepts]
%><%= (gv/id (:id node)) %>[label=<%= (node-label node e) %>, style="filled", fillcolor="#dddddd"] 
<%
  )
%>
// relations
<%
  (doseq [rel relations]
%><%= (gv/id (:from rel)) %> -> <%= (gv/id (:to rel)) %> [label = <%= (relation-label rel e) %>]
<%
  )
%>
}
<%
)
%>
// (generated by Overarch with template <%= (:template ctx) %>)
