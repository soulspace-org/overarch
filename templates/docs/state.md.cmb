<%
;;;;
;;;; Documentation Template for a State
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(let [substates (m/children model e)
      transitions-incoming (m/transitions-incoming model e)
      transitions-outgoing (m/transitions-outgoing model e)]

%># <%= (:name e) %> (<%= (m/element-type e) %>)
## Description
<%= (:desc e) %>
<%
  (when (:doc e)
%>## Documentation
<%= (:doc e) %>
<%extensions
  )
%>
## Transitions
<%
  (when (seq transitions-incoming)
%>### Incoming Transitions
Name | From | Description
---|---|---
<%
    (doseq [transition transitions-incoming]
%><%= (:name transition) %> | <%= (md/relative-element-link e (m/resolve-element model (:from transition))) %> | (t/single-line (:desc transition))
<%
    )
  )
  (when (seq transitions-outgoing)
%>### Outgoing Transitions
Name | To | Description
---|---|---
<%
    (doseq [transition transitions-outgoing]
%><%= (:name transition) %> | <%= (md/relative-element-link e (m/resolve-element model (:from transition))) %> | (t/single-line (:desc transition))
<%
    )
  )

  (when (seq (:tags e))
%>
### Tags
<%= (str/join ", " (:tags e)) %>
<%
  )

)
%>

## Navigation
<%= (md/file-link "./views-in-namespace.md" "List of views in namespace") %>
<%= (md/relative-file-link e "views.md" "List of all Views") %>

(generated with <%= (:template ctx) %>)
