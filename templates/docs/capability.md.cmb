<%
;;;;
;;;; Documentation Template for a Capability
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(let [parent (m/parent model e)
      children (m/children model e)
      processes nil ; TODO
      ]
    
%># <%= (:name e) %> (<%= (m/element-type e) %>)
## Description
<%= (:desc e) %>

<%
  (when (:doc e)
%>## Documentation
<%= (:doc e) %>

<%
  )

  (when parent
%>## Parent
<%= (md/relative-element-link e parent) %>
<%
  )

  (when (seq processes)
%>
## Roles
| Name | Description |
|---|---|
<%
    (doseq [process (sort-by :name processes)]
%>| <%= (md/relative-element-link e process) %> | <%= (t/single-line (:desc process)) %> |
<%
    )
  )

  (when (seq (:tags e))
%>
### Tags
<%= (str/join ", " (:tags e)) %>
<%
  )

)
%>

## Navigation
<%= (md/file-link "./views-in-namespace.md" "List of views in namespace") %>
<%= (md/relative-file-link e "views.md" "List of all Views") %>

(generated with <%= (:template ctx) %>)
