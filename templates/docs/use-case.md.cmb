<%
;;;;
;;;; Documentation Template for a Use Case
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(defn use-case-level
  "Renders the level of the use case `uc`."
  [uc]
  (if-let [level (:level uc)]
    (str/capitalize (name level))
    "---"))

(let [actors (m/actors model e)
      supporting-actors (m/supporting-actors model e)
      included (m/included model e)
      extensions (m/extensions model e)]
%># <%= (:name e) %> (<%= (m/element-type e) %>)
## Level
<%= (use-case-level e) %>

## Description
<%= (:desc e) %>
<%
  (when (:doc e)
%>
## Documentation
<%= (:doc e) %>
<%
  )

  (when (seq actors)
%>## Actors
| Name | Type | Description |
|---|---|---|
<%
    (doseq [actor (sort-by :name actors)]
%>| <%= (md/relative-element-link e actor) %> | <%= (:el actor) %> | <%= (t/single-line (:desc actor)) %> |
<%
    )
  )

  (when (seq supporting-actors)
%>## Supporting Actors
| Name | Type | Description |
|---|---|---|
<%
    (doseq [actor (sort-by :name supporting-actors)]
%>| <%= (md/relative-element-link e actor) %> | <%= (:el actor) %> | <%= (t/single-line (:desc actor)) %> |
<%
    )
  )

  (when (seq included)
%>## Included Use Cases
| Name | Level | Description |
|---|---|---|
<%
    (doseq [uc (sort-by :name included)]
%>| <%= (md/relative-element-link e uc) %> | <%= (use-case-level uc) %> | <%= (t/single-line (:desc uc)) %> |
<%
    )
  )

  (when (seq extensions)
%>## Extension Use Cases
| Name | Level | Description |
|---|---|---|
<%
    (doseq [uc (sort-by :name extensions)]
%>| <%= (md/relative-element-link e uc) %> | <%= (use-case-level uc) %> | <%= (t/single-line (:desc uc)) %> |
<%
    )
  )

;;
;; include relevant view diagrams
;;
  (when 
    (and (contains? #{:use-case} (:el e)) (m/resolve-view model e "use-case-view"))
%>
## Use Case View
<%= (md/relative-view-link e (m/resolve-view model e "use-case-view")) %>

<%= (md/relative-element-link e (m/resolve-view model e "use-case-view")) %>
<%
  )
)
%>

(generated with <%= (:template ctx) %>)
