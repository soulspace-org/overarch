<%
;;;;
;;;; Documentation Template for a Process
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(let [parent (m/parent model e)
      children (m/children model e)
      sub-processes (filter #(= :process (:el %)) children)
      roles (m/roles model e)
      input (m/referring-nodes model e #{:input-of})
      output (m/referring-nodes model e #{:output-of})
      input-artifacts (filter #(= :artifact (:el %)) input)
      output-artifacts (filter #(= :artifact (:el %)) output)
      required-for (m/referred-nodes model e #{:required-for})
      capabilities (filter #(= :capability (:el %)) required-for)]

%># <%= (:name e) %> (<%= (m/element-type e) %>)
## Description
<%= (:desc e) %>

<%
  (when (:doc e)
%>## Documentation
<%= (:doc e) %>

<%
  )

  (when parent
%>## Parent
<%= (md/relative-element-link e parent) %>
<%
  )

  (when (seq sub-processes)
%>
## Sub Processes
| Name | Description |
|---|---|
<%
    (doseq [process (sort-by :name sub-processes)]
%>| <%= (md/relative-element-link e process) %> | <%= (t/single-line (:desc process)) %> |
<%
    )
  )

  (when (seq capabilities)
%>
## Required for Capabilities
| Name | Description |
|---|---|
<%
    (doseq [capability (sort-by :name capabilities)]
%>| <%= (md/relative-element-link e capability) %> | <%= (t/single-line (:desc capability)) %> |
<%
    )
  )

  (when (seq roles)
%>
## Roles
| Name | Description |
|---|---|
<%
    (doseq [role (sort-by :name roles)]
%>| <%= (md/relative-element-link e role) %> | <%= (t/single-line (:desc role)) %> |
<%
    )
  )

  (when (seq input-artifacts)
%>
## Input Artifacts
| Name | Description |
|---|---|
<%
    (doseq [artifact (sort-by :name input-artifacts)]
%>| <%= (md/relative-element-link e artifact) %> | <%= (t/single-line (:desc artifact)) %> |
<%
    )
  )

  (when (seq output-artifacts)
%>
## Output Artifacts
| Name | Description |
|---|---|
<%
    (doseq [artifact (sort-by :name output-artifacts)]
%>| <%= (md/relative-element-link e artifact) %> | <%= (t/single-line (:desc artifact)) %> |
<%
    )
  )

  (when (seq (:tags e))
%>
### Tags
<%= (str/join ", " (:tags e)) %>
<%
  )

)
%>

## Navigation
<%= (md/file-link "./views-in-namespace.md" "List of views in namespace") %>
<%= (md/relative-file-link e "views.md" "List of all Views") %>

(generated with <%= (:template ctx) %>)
