<%
;;;;
;;;; Documentation Template for a Code View
;;;;

(let [elements (v/view-elements model e)
      packages (filter #(= :package (:el %)) elements)
      namespaces (filter #(= :namespace (:el %)) elements)
      interfaces (filter #(= :interface (:el %)) elements)
      protocols (filter #(= :protocol (:el %)) elements)
      classes (filter #(= :class (:el %)) elements)]
%># <%= (:title e)%>

## Diagramm
![<%= (name (:el e)) %>](<%= (name (:id e)) %>.png)

## Description
<%= (:desc e) %>
<%
  (when (:doc e)
%>
## Documentation
<%= (:doc e) %>
<%
  )

  (when (seq packages)
%>
## Packages
| Name | Description |
|---|---|
<%
    (doseq [package package]
%>|<%= (:name package) %>|<%= (t/single-line (:desc package)) %>|
<%
    )
  )
  (when (seq interfaces)
%>
## Interfaces
| Name | Description |
|---|---|
<%
    (doseq [interface interfaces]
%>|<%= (:name interface) %>|<%= (t/single-line (:desc interface)) %>|
<%
    )
  )
  (when (seq classes)
%>
## Classes
| Name | Description |
|---|---|
<%
    (doseq [class classes]
%>|<%= (:name class) %>|<%= (t/single-line (:desc class)) %>|
<%
    )
  )
)
%>

(generated with <%= (:template ctx) %>)

