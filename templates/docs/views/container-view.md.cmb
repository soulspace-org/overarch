<%
;;;;
;;;; Documentation Template for a Container View
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(let [elements (v/view-elements model e)
      roles (filter #(= :person (:el %)) elements)
      systems (filter #(= :system (:el %)) elements)
      containers (filter #(= :container (:el %)) elements)
      app-containers (filter #(= nil (:subtype %)) containers)
      queue-containers (filter #(= :queue (:subtype %)) containers)
      storage-containers (filter #(= :database (:subtype %)) containers)
      relations (filter m/model-relation? elements)
      request-relations (filter #(= :request (:el %)) relations)
      response-relations (filter #(= :response (:el %)) relations)
      publish-relations (filter #(= :publish (:el %)) relations)
      subscribe-relations (filter #(= :subscribe (:el %)) relations)
      send-relations (filter #(= :send (:el %)) relations)
      dataflow-relations (filter #(= :dataflow (:el %)) relations)]

%># <%= (:title e)%>

## Description
<%= (:desc e) %>
<%
  (when (:doc e)
%>
## Documentation
<%= (:doc e) %>
<%
  )

  (when (seq roles)
%>
## User Roles
| Name | Description |
|---|---|
<%
    (doseq [role roles]
%>| <%= (md/relative-element-link e role) %> | <%= (:desc role) %> |
<%
    ))

  (when (seq systems)
%>## Systems
| Name | Description |
|---|---|
<%
    (doseq [system systems]
%>| <%= (md/relative-element-link e system) %> | <%= (:desc system) %> |
<%
    ))
  
  (when (seq containers)
%>## Containers
| Name | Description |
|---|---|
<%
    (doseq [container containers]
%>| <%= (md/relative-element-link e container) %> | <%= (:desc container) %> |
<%
    ))
)
%>

(generated with <%= (:template ctx) %>)
