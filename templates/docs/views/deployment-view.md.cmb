<%
;;;;
;;;; Documentation Template for a Deployment View
;;;;
;;;; config:
;;;;  :per-element true
;;;;  :id-as-name  true
;;;;

(let [elements (v/view-elements model e)
      nodes (filter #(= :node (:el %)) elements)
      containers (filter #(= :container (:el %)) elements)
      links (filter #(= :link (:el %)) elements)
      ]
%># <%= (:title e)%>

## Description
<%= (:desc e) %>
<%
  (when (:doc e)
%>
## Documentation
<%= (:doc e) %>
<%
  )
%>
## Nodes
| Name | Technology | Description |
|---|---|---|
<%
  (doseq [node (sort-by #(str/capitalize (:name %)) nodes)]
%>| <%= (md/relative-element-link e node) %> | <%= (:tech node) %> | <%= (:desc node) %> |
<%
  )

  (when (seq containers) 
%>
## Containers
| Name | Technology | Description |
|---|---|---|
<%
    (doseq [container (sort-by #(str/capitalize (:name %)) containers)]
%>| <%= (md/relative-element-link e container) %> | <%= (:tech container) %> | <%= (:desc container) %> |
<%
    )
  )

  (when (seq links) 
%>
## Links
| Name | From | To | Technology | Description |
|---|---|---|---|---|
<%
    (doseq [link (sort-by #(str/capitalize (:name %)) links)]
%>| <%= (:name link) %> | <%= (m/from-name model (:from link)) %> | <%= (m/to-name model (:to link)) %> | <%= (:tech link) %> | <%= (:desc link) %> |
<%
    )
  )
%>
## Deployments
<%
)
%>

(generated with <%= (:template ctx) %>)
